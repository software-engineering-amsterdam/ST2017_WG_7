module Exercise6b where
import Data.List
import System.Random
import Lecture6

-- Exercise 6b
mersennePrimes :: IO ()
mersennePrimes = mp primes
  where mp (p:ps) = do let m = (2 ^ p) - 1
                       b  <- primeMR 10 m
                       if b then print (show (p, m)) else return ()
                       mp ps

-- mersennePrimes:
-- "(2,3)"
-- "(3,7)"
-- "(5,31)"
-- "(7,127)"
-- "(13,8191)"
-- "(17,131071)"
-- "(19,524287)"
-- "(31,2147483647)"
-- "(61,2305843009213693951)"
-- "(89,618970019642690137449562111)"
-- "(107,162259276829213363391578010288127)"
-- "(127,170141183460469231731687303715884105727)"
-- "(521,6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151)"
-- "(607,531137992816767098689588206552468627329593117727031923199444138200403559860852242739162502265229285668889329486246501015346579337652707239409519978766587351943831270835393219031728127)"
-- "(1279,10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087)"

-- The found numbers are genuine Mersenne primes according to the list found on https://www.mersenne.org/primes/

-- Time: 45 minutes
